library(shiny)
library(tidyverse)
data <- read_csv("../data/lab_sodra.csv")
datafiltered <- data%>%
filter(ecoActCode == 452000)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectizeInput(inputId = "imones_kodas", label = "Imones kodas", choices = NULL, selected = NULL)
),
mainPanel(tabsetPanel(
tabPanel("grafikas", plotOutput("plot")),
tabPanel("lentele", tableOutput("table"))
)
)
)
)
server <- function(input, output, session) {
updateSelectizeInput(session, "imones_kodas", choices = datafiltered$name, server = TRUE)
output$table <- renderTable(
datafiltered %>%
filter(name == input$imones_kodas) , digits = 0
)
output$plot <- renderPlot(
datafiltered %>%
filter(name == input$imones_kodas) %>%
ggplot(aes(x = month, y = avgWage)) +
geom_line()
)
}
shinyApp(ui, server)
library(tidyverse)
library(ggplot2)
data <- read_csv("lab_sodra.csv")
summary(data)
datafiltered <- data %>%
filter(ecoActCode == 452000)
datafiltered%>%
ggplot(aes(x = avgWage)) +
geom_histogram(bins = 100)
data1 <- datafiltered %>%
group_by(name) %>%
summarise(avg = mean(avgWage)) %>%
arrange(desc(avg))
data2 <- merge(datafiltered, data1)
data2%>%
arrange(desc(avg))%>%
head(60)%>%
ggplot(aes(x = month, y = avgWage, group = name)) + theme_minimal()+
geom_line(aes(colour = name)) + geom_point(aes(color = name)) +
theme(axis.text.x=element_blank())
data2 %>%
arrange(desc(avg))%>%
head(60)%>%
group_by(name)%>%
slice_max(numInsured, with_ties = FALSE)%>%
head(5)%>%
ggplot(aes(x = reorder(name,-numInsured), y = numInsured)) + geom_col(aes(fill = name)) +
theme(axis.text.x=element_blank()) + xlab('name')
library(tidyverse)
library(ggplot2)
data <- read_csv("lab_sodra.csv")
summary(data)
datafiltered <- data %>%
filter(ecoActCode == 452000)
datafiltered%>%
ggplot(aes(x = avgWage)) +
geom_histogram(bins = 100)
data1 <- datafiltered %>%
group_by(name) %>%
summarise(avg = mean(avgWage)) %>%
arrange(desc(avg))
data2 <- merge(datafiltered, data1)
data2%>%
arrange(desc(avg))%>%
head(60)%>%
ggplot(aes(x = month, y = avgWage, group = name)) + theme_minimal()+
geom_line(aes(colour = name)) + geom_point(aes(color = name)) +
theme(axis.text.x=element_blank())
data2 %>%
arrange(desc(avg))%>%
head(60)%>%
group_by(name)%>%
slice_max(numInsured, with_ties = FALSE)%>%
head(5)%>%
ggplot(aes(x = reorder(name,-numInsured), y = numInsured)) + geom_col(aes(fill = name)) +
theme(axis.text.x=element_blank()) + xlab('name')
setwd("~/R/LB2/KTU-duomenu-vizualizacija/laboratorinis/data")
library(tidyverse)
library(ggplot2)
data <- read_csv("lab_sodra.csv")
summary(data)
datafiltered <- data %>%
filter(ecoActCode == 452000)
datafiltered%>%
ggplot(aes(x = avgWage)) +
geom_histogram(bins = 100)
data1 <- datafiltered %>%
group_by(name) %>%
summarise(avg = mean(avgWage)) %>%
arrange(desc(avg))
data2 <- merge(datafiltered, data1)
data2%>%
arrange(desc(avg))%>%
head(60)%>%
ggplot(aes(x = month, y = avgWage, group = name)) + theme_minimal()+
geom_line(aes(colour = name)) + geom_point(aes(color = name)) +
theme(axis.text.x=element_blank())
data2 %>%
arrange(desc(avg))%>%
head(60)%>%
group_by(name)%>%
slice_max(numInsured, with_ties = FALSE)%>%
head(5)%>%
ggplot(aes(x = reorder(name,-numInsured), y = numInsured)) + geom_col(aes(fill = name)) +
theme(axis.text.x=element_blank()) + xlab('name')
library(shiny)
library(tidyverse)
data <- read_csv("../data/lab_sodra.csv")
datafiltered <- data%>%
filter(ecoActCode == 452000)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectizeInput(inputId = "imones_kodas", label = "Imones kodas", choices = NULL, selected = NULL)
),
mainPanel(tabsetPanel(
tabPanel("grafikas", plotOutput("plot")),
tabPanel("lentele", tableOutput("table"))
)
)
)
)
server <- function(input, output, session) {
updateSelectizeInput(session, "imones_kodas", choices = datafiltered$name, server = TRUE)
output$table <- renderTable(
datafiltered %>%
filter(name == input$imones_kodas) , digits = 0
)
output$plot <- renderPlot(
datafiltered %>%
filter(name == input$imones_kodas) %>%
ggplot(aes(x = month, y = avgWage)) +
geom_line()
)
}
shinyApp(ui, server)
